module LinkedList.Type where

import Data.Records.Yarl.LinkedList

type LinkedListRecord =
  Record
    [ Field "a0" Int,
      Field "a1" Int,
      Field "a2" Int,
      Field "a3" Int,
      Field "a4" Int,
      Field "a5" Int,
      Field "a6" Int,
      Field "a7" Int,
      Field "a8" Int,
      Field "a9" Int,
      Field "a10" Int,
      Field "a11" Int,
      Field "a12" Int,
      Field "a13" Int,
      Field "a14" Int,
      Field "a15" Int,
      Field "a16" Int,
      Field "a17" Int,
      Field "a18" Int,
      Field "a19" Int,
      Field "a20" Int,
      Field "a21" Int,
      Field "a22" Int,
      Field "a23" Int,
      Field "a24" Int,
      Field "a25" Int,
      Field "a26" Int,
      Field "a27" Int,
      Field "a28" Int,
      Field "a29" Int,
      Field "a30" Int,
      Field "a31" Int,
      Field "a32" Int,
      Field "a33" Int,
      Field "a34" Int,
      Field "a35" Int,
      Field "a36" Int,
      Field "a37" Int,
      Field "a38" Int,
      Field "a39" Int,
      Field "a40" Int,
      Field "a41" Int,
      Field "a42" Int,
      Field "a43" Int,
      Field "a44" Int,
      Field "a45" Int,
      Field "a46" Int,
      Field "a47" Int,
      Field "a48" Int,
      Field "a49" Int,
      Field "a50" Int,
      Field "a51" Int,
      Field "a52" Int,
      Field "a53" Int,
      Field "a54" Int,
      Field "a55" Int,
      Field "a56" Int,
      Field "a57" Int,
      Field "a58" Int,
      Field "a59" Int,
      Field "a60" Int,
      Field "a61" Int,
      Field "a62" Int,
      Field "a63" Int
    ]
